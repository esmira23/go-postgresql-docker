// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/all": {
            "get": {
                "description": "Get all data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Get Data"
                ],
                "summary": "Get All",
                "operationId": "all",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Data"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/date": {
            "get": {
                "description": "Get data by date of post",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Get Data"
                ],
                "summary": "Get By Post Date",
                "operationId": "date",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Date from YYYY-MM-DD",
                        "name": "from",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Date to YYYY-MM-DD",
                        "name": "to",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Data"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/payment_narrative/{narrative}": {
            "get": {
                "description": "Get data by payment narrative",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Get Data"
                ],
                "summary": "Get By Payment Narrative",
                "operationId": "payment-narrative",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Partially specified payment narrative",
                        "name": "narrative",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Data"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/payment_type/{type}": {
            "get": {
                "description": "get data by payment type",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Get Data"
                ],
                "summary": "Get By Payment Type",
                "operationId": "payment-type",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Payment Type (card/cash)",
                        "name": "type",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Data"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/post_data": {
            "post": {
                "description": "Post all data",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Upload Data"
                ],
                "summary": "Post All",
                "operationId": "post",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/status/{status}": {
            "get": {
                "description": "get data by status",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Get Data"
                ],
                "summary": "Get By Status",
                "operationId": "status",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Status (accepted/declined)",
                        "name": "status",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Data"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/terminal": {
            "get": {
                "description": "Get data by terminal id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Get Data"
                ],
                "summary": "Get By Terminal Id",
                "operationId": "terminal-id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Terminal ID. Pattern: id_1,id_2,..,id_n",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Data"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMsg"
                        }
                    }
                }
            }
        },
        "/transaction/{id}": {
            "get": {
                "description": "get data by transaction id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Get Data"
                ],
                "summary": "Get By Transaction Id",
                "operationId": "transaction-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Transaction ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Data"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorMsg"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Data": {
            "type": "object",
            "properties": {
                "amount_original": {
                    "type": "number"
                },
                "amount_total": {
                    "type": "number"
                },
                "commission_client": {
                    "type": "number"
                },
                "commission_provider": {
                    "type": "number"
                },
                "commission_ps": {
                    "type": "number"
                },
                "date_input": {
                    "type": "string"
                },
                "date_post": {
                    "type": "string"
                },
                "partner_object_id": {
                    "type": "integer"
                },
                "payee_bank_account": {
                    "type": "string"
                },
                "payee_bank_mfo": {
                    "type": "integer"
                },
                "payee_id": {
                    "type": "integer"
                },
                "payee_name": {
                    "type": "string"
                },
                "payment_narrative": {
                    "type": "string"
                },
                "payment_number": {
                    "type": "string"
                },
                "payment_type": {
                    "type": "string"
                },
                "request_id": {
                    "type": "integer"
                },
                "service": {
                    "type": "string"
                },
                "service_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "terminal_id": {
                    "type": "integer"
                },
                "transaction_id": {
                    "type": "integer"
                }
            }
        },
        "models.ErrorMsg": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8000",
	BasePath:         "/api",
	Schemes:          []string{},
	Title:            "Swagger Go API",
	Description:      "API Server",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
